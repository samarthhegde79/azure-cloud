# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - petstore/petstorepetservice/*

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '7f9d8d85-7a18-4e9f-9ee8-b38145ee827a'
  imageRepository: 'petstorepetservice'
  containerRegistry: 'azurepetstorecontainerregistry.azurecr.io'
  dockerfilePath: 'petstore/petstorepetservice/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: '$(crImagePullSecretGlobal)'

stages:
- stage: Build
  displayName: Build stage
  jobs: 
  - job: Build
    displayName: Build App
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo -n -e "{\"version\":\"$(Build.BuildNumber) - $(tag)\"}" > petstore/petstorepetservice/src/main/resources/version.json

    - task: Maven@3
      continueOnError: true 
      displayName: Build Spring Boot Jar
      inputs:
        mavenPomFile: 'petstore/petstorepetservice/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: 'petstore/petstorepetservice/target/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'jaCoCo'
        goals: 'package'
    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy App
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Development'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              kubectl apply -f $(Pipeline.Workspace)/manifests/petstorepetservice-deployment-everything-enabled.yml -n ingress-petstoreservices --timeout=600s
              kubectl apply -f $(Pipeline.Workspace)/manifests/petstorepetservice-service-everything-enabled.yml -n ingress-petstoreservices

                
# - stage: Automation
#   displayName: Automation stage
#   jobs: 
#   - job: Automation
#     displayName: Automation Testing
#     pool:
#       vmImage: 'windows-latest'
#     steps:
#         - task: TriggerPipeline@1
#           inputs:
#             serviceConnection: 'Automation'
#             project: '6b3206dd-90b3-40f6-a611-e5a1e5a13593'
#             Pipeline: 'Build'
#             buildDefinition: 'azure-petstoreautomation-regression-tests'
#             Branch: 'main'